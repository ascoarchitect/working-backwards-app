name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Build
      run: npm run build
  
  lint-and-test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/working-backwards-backend
    
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './backend/working-backwards-backend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Setup SAM CLI
      uses: aws-actions/setup-sam@v2
    
    - name: Build with SAM
      run: sam build
    
    - name: Run tests
      run: npm test

  deploy:
    needs: [lint-and-test-frontend, lint-and-test-backend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
    
    - name: Build frontend
      run: |
        cd frontend
        npm ci
        npm run build
    
    - name: Deploy frontend to S3
      run: |
        aws s3 sync frontend/dist s3://${FRONTEND_BUCKET_NAME} --delete
      env:
        FRONTEND_BUCKET_NAME: ${{ secrets.FRONTEND_BUCKET_NAME }}
    
    - name: Setup SAM CLI
      uses: aws-actions/setup-sam@v2
    
    - name: Deploy backend with SAM
      run: |
        cd backend/working-backwards-backend
        sam build
        sam deploy --no-confirm-changeset --no-fail-on-empty-changeset
